@using TestingDemo.Models
@{
    ViewData["Title"] = "Permit Analytics Dashboard";
}
@using System.Linq

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="fw-bold text-primary">Permit Analytics Dashboard</h1>
            <hr class="my-3">
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4 g-3">
        <div class="col-xl-3 col-md-6">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body bg-primary bg-gradient text-white rounded">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-white-50 mb-1">Total Permits</h6>
                            <h2 class="mb-0 fw-bold">@(ViewBag.TotalPermits ?? 0)</h2>
                        </div>
                        <div class="fs-1 opacity-50">
                            <i class="fas fa-file-alt"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body bg-success bg-gradient text-white rounded">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-white-50 mb-1">Completed Permits</h6>
                            <h2 class="mb-0 fw-bold">@(ViewBag.CompletedPermits ?? 0)</h2>
                        </div>
                        <div class="fs-1 opacity-50">
                            <i class="fas fa-check-circle"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body bg-warning bg-gradient text-white rounded">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-white-50 mb-1">In Progress</h6>
                            <h2 class="mb-0 fw-bold">@(ViewBag.InProgressPermits ?? 0)</h2>
                        </div>
                        <div class="fs-1 opacity-50">
                            <i class="fas fa-hourglass-half"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body bg-info bg-gradient text-white rounded">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-white-50 mb-1">Avg. Completion Time</h6>
                            <h2 class="mb-0 fw-bold">@(ViewBag.AvgCompletionDays ?? 0) days</h2>
                        </div>
                        <div class="fs-1 opacity-50">
                            <i class="fas fa-calendar-check"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row mb-4 g-3">
        <!-- Permit Status Chart -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 fw-bold text-primary">
                        <i class="fas fa-chart-pie me-2 text-primary-emphasis"></i>
                        Permit Status Distribution
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="statusChart" height="250"></canvas>
                </div>
            </div>
        </div>

        <!-- Priority Distribution Chart -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 fw-bold text-primary">
                        <i class="fas fa-chart-bar me-2 text-primary-emphasis"></i>
                        Permit Priority Distribution
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="priorityChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Monthly Trend and Client Data -->
    <div class="row mb-4 g-3">
        <!-- Monthly Trend Chart -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 fw-bold text-primary">
                        <i class="fas fa-chart-line me-2 text-primary-emphasis"></i>
                        Monthly Permit Trend
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="trendChart" height="250"></canvas>
                </div>
            </div>
        </div>

        <!-- Top Clients Table -->
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 fw-bold text-primary">
                        <i class="fas fa-users me-2 text-primary-emphasis"></i>
                        Top Clients by Permit Count
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Client</th>
                                    <th>Permits</th>
                                    <th>Completion %</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var tasks = ViewBag.AllTasks as List<TaskFlowModel>;
                                    if (tasks != null && tasks.Any())
                                    {
                                        var clientGroups = tasks
                                        .Where(t => !string.IsNullOrEmpty(t.ClientName))
                                        .GroupBy(t => t.ClientName)
                                        .Select(g => new
                                        {
                                            ClientName = g.Key,
                                            TotalCount = g.Count(),
                                            CompletedCount = g.Count(t => t.IsDone),
                                            CompletionRate = g.Count() > 0 ? (double)g.Count(t => t.IsDone) / g.Count() * 100 : 0
                                        })
                                        .OrderByDescending(c => c.TotalCount)
                                        .Take(5);

                                        foreach (var client in clientGroups)
                                        {
                                            <tr>
                                                <td class="fw-medium">@client.ClientName</td>
                                                <td>@client.TotalCount</td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <div class="me-2">@Math.Round(client.CompletionRate, 1)%</div>
                                                        <div class="progress flex-grow-1" style="height: 6px;">
                                                            <div class="progress-bar bg-success" role="progressbar"
                                                                 style="width: @(client.CompletionRate)%"
                                                                 aria-valuenow="@Math.Round(client.CompletionRate, 1)"
                                                                 aria-valuemin="0"
                                                                 aria-valuemax="100"></div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="3" class="text-center py-3 text-muted">No client data available</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Progress Over Time -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 fw-bold text-primary">
                        <i class="fas fa-chart-area me-2 text-primary-emphasis"></i>
                        Permit Completion Analysis
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="progressAnalysisTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Permit ID</th>
                                    <th>Client</th>
                                    <th>Date Issued</th>
                                    <th>Date Completed</th>
                                    <th>Duration (Days)</th>
                                    <th>Priority</th>
                                    <th>Progress</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    if (tasks != null && tasks.Any())
                                    {
                                        foreach (var task in tasks)
                                        {
                                            string statusClass = task.IsDone ? "bg-success" :
                                            task.Progress > 75 ? "bg-info" :
                                            task.Progress > 50 ? "bg-primary" :
                                            task.Progress > 25 ? "bg-warning" : "bg-danger";
                                            <tr>
                                                <td><span class="badge bg-secondary">#@task.Id</span></td>
                                                <td>@(task.ClientName ?? "N/A")</td>
                                                <td>@task.DateIssued.ToString("MM/dd/yyyy")</td>
                                                <td>
                                                    @if (task.DateCompleted.HasValue)
                                                    {
                                                        <span class="badge bg-success">
                                                            @task.DateCompleted.Value.ToString("MM/dd/yyyy")
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-warning">In Progress</span>
                                                    }
                                                </td>
                                                <td>
                                                    @{
                                                        if (task.DateCompleted.HasValue)
                                                        {
                                                            @Math.Round((task.DateCompleted.Value - task.DateIssued).TotalDays, 1)
                                                        }
                                                        else
                                                        {
                                                            @Math.Round((DateTime.Now - task.DateIssued).TotalDays, 1)
                                                        }
                                                    } days
                                                </td>
                                                <td>
                                                    @if (string.IsNullOrEmpty(task.Priority))
                                                    {
                                                        <span class="badge bg-secondary">Not Set</span>
                                                    }
                                                    else if (task.Priority == "High")
                                                    {
                                                        <span class="badge bg-danger">@task.Priority</span>
                                                    }
                                                    else if (task.Priority == "Medium")
                                                    {
                                                        <span class="badge bg-warning text-dark">@task.Priority</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-info text-dark">@task.Priority</span>
                                                    }
                                                </td>
                                                <td class="w-25">
                                                    <div class="progress" style="height: 8px;">
                                                        <div class="progress-bar @statusClass" role="progressbar"
                                                             style="width: @task.Progress%;" aria-valuenow="@task.Progress"
                                                             aria-valuemin="0" aria-valuemax="100">
                                                        </div>
                                                    </div>
                                                    <small class="d-block text-end mt-1">@task.Progress%</small>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7" class="text-center py-4 text-muted">No task data available</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.23/js/dataTables.bootstrap4.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Status Chart
        var statusCtx = document.getElementById('statusChart').getContext('2d');
        new Chart(statusCtx, {
            type: 'doughnut',
            data: {
                labels: ['Completed', 'In Progress', 'Archived'],
                datasets: [{
                    data: [@(ViewBag.CompletedPermits ?? 0), @(ViewBag.InProgressPermits ?? 0), @(ViewBag.ArchivedPermits ?? 0)],
                    backgroundColor: ['#198754', '#ffc107', '#0dcaf0'],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '65%',
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // Priority Chart
        @if (ViewBag.PriorityData != null)
        {
            <text>
                var priorityData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.PriorityData));
                var priorityCtx = document.getElementById('priorityChart').getContext('2d');
                new Chart(priorityCtx, {
                    type: 'bar',
                    data: {
                        labels: priorityData.map(d => d.Priority || 'Not Set'),
                        datasets: [{
                            label: 'Number of Permits',
                            data: priorityData.map(d => d.Count),
                            backgroundColor: [
                                '#0d6efd', '#6610f2', '#6f42c1', '#d63384', '#dc3545',
                                '#fd7e14', '#ffc107', '#198754', '#20c997', '#0dcaf0'
                            ],
                            borderWidth: 0,
                            borderRadius: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    color: "rgba(0, 0, 0, 0.05)"
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            }
                        }
                    }
                });
            </text>
        }

        // Monthly Trend Chart
        @if (ViewBag.MonthlyData != null)
        {
            <text>
                var monthlyData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.MonthlyData));
                var trendCtx = document.getElementById('trendChart').getContext('2d');
                new Chart(trendCtx, {
                    type: 'line',
                    data: {
                        labels: monthlyData.map(d => d.MonthYear),
                        datasets: [{
                            label: 'Permits Issued',
                            data: monthlyData.map(d => d.Count),
                            fill: true,
                            backgroundColor: 'rgba(32, 201, 151, 0.1)',
                            borderColor: '#20c997',
                            borderWidth: 2,
                            pointBackgroundColor: '#20c997',
                            pointBorderColor: '#fff',
                            pointRadius: 4,
                            pointHoverRadius: 6,
                            tension: 0.4
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    color: "rgba(0, 0, 0, 0.05)"
                                }
                            },
                            x: {
                                grid: {
                                    color: "rgba(0, 0, 0, 0.05)"
                                }
                            }
                        }
                    }
                });
            </text>
        }

        // Initialize DataTables
        $(document).ready(function () {
            $('#progressAnalysisTable').DataTable({
                "order": [[2, "desc"]],
                "pageLength": 10,
                "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                "language": {
                    "search": "<i class='fas fa-search'></i> _INPUT_",
                    "searchPlaceholder": "Search permits...",
                    "lengthMenu": "_MENU_ permits per page",
                    "info": "Showing _START_ to _END_ of _TOTAL_ permits",
                    "infoEmpty": "No permits available",
                    "infoFiltered": "(filtered from _MAX_ total permits)",
                    "zeroRecords": "No matching permits found"
                },
                "dom": '<"row mb-3"<"col-md-6"l><"col-md-6"f>><"table-responsive"t><"row"<"col-md-6"i><"col-md-6"p>>'
            });
        });
    });
</script>
