@model TaskFlowModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var priorities = new List<SelectListItem>
    {
        new SelectListItem { Text = "Low", Value = "Low" },
        new SelectListItem { Text = "Normal", Value = "Normal" },
        new SelectListItem { Text = "Medium", Value = "Medium" },
        new SelectListItem { Text = "High", Value = "High" },
    };
}

<div class="container mt-4">
    <h2 class="mb-4"><i class="bi bi-clipboard-check"></i> Update Documentation Status</h2>

    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Client: @Model.ClientName - Permit: @Model.Permit</h5>
        </div>
        <div class="card-body">
            <form asp-action="UpdateDocumentation" method="post">
                <input type="hidden" asp-for="Id" />

                <div class="mb-4">
                    <h5>Document Status</h5>
                    <p class="text-muted">Check the documents that have been received and properly filed.</p>
                    <div class="list-group">
                        @foreach (var requirement in Model.RequirementList)
                        {
                            var isChecked = Model.CheckedRequirements.Contains(requirement);
                            <div class="list-group-item">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="documentedItems" value="@requirement" id="req-@requirement.GetHashCode()" @(isChecked ? "checked=\"checked\"" : "")>
                                    <label class="form-check-label" for="req-@requirement.GetHashCode()">
                                        @requirement
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="Priority" class="form-label"></label>
                    <select asp-for="Priority" asp-items="priorities" class="form-select"></select>
                </div>

                <div class="d-flex justify-content-between">
                    <a href="@Url.Action("DocumentArchive", "Task")" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Archive
                    </a>
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-save"></i> Save Documentation Status
                    </button>
                </div>
            </form>
        </div>
    </div>

</div>