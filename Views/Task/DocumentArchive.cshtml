@{
    var statusOptions = new List<SelectListItem>
    {
        new SelectListItem { Value = "", Text = "All" },
        new SelectListItem { Value = "documented", Text = "Fully Documented" },
        new SelectListItem { Value = "not-documented", Text = "Not Documented" },
        new SelectListItem { Value = "partial", Text = "Partially Documented" }
    };

    var selectedStatus = ViewBag.StatusFilter as string ?? "";
}

<div class="container mt-4">
    <!-- Success Message Notification -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="bi bi-folder-check me-2"></i>Document Archive</h2>
        <div class="btn-group" role="group">
            <a href="@Url.Action("TaskFlow", "Task")" class="btn btn-outline-primary">
                <i class="bi bi-arrow-left-circle me-1"></i> Active Tasks
            </a>
            <a href="@Url.Action("Analytics", "Task")" class="btn btn-outline-info">
                <i class="bi bi-graph-up me-1"></i> Analytics
            </a>
            <a href="@Url.Action("History", "Task")" class="btn btn-outline-secondary">
                <i class="bi bi-clock-history me-1"></i> History
            </a>
        </div>
    </div>

    <!-- Enhanced Filter Section with Status Filter -->
    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-light">
            <h5 class="mb-0"><i class="bi bi-funnel-fill me-2"></i>Filter Options</h5>
        </div>
        <div class="card-body">
            <form id="filterForm" method="get" action="@Url.Action("DocumentArchive", "Task")" class="row g-3">
                <div class="col-md-3">
                    <label for="clientFilter" class="form-label">Client Name</label>
                    <input type="text" class="form-control" id="clientFilter" name="client" value="@ViewBag.ClientFilter" placeholder="Filter by client...">
                </div>
                <div class="col-md-3">
                    <label for="permitFilter" class="form-label">Permit Type</label>
                    <input type="text" class="form-control" id="permitFilter" name="permit" value="@ViewBag.PermitFilter" placeholder="Filter by permit...">
                </div>
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label">Document Status</label>
                    <select class="form-select" id="statusFilter" name="status">
                        @foreach (var option in statusOptions)
                        {
                            <option value="@option.Value" selected="@(option.Value == selectedStatus)">@option.Text</option>
                        }
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="bi bi-funnel me-1"></i> Apply Filters
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Tasks Table with Enhanced Visual Hierarchy -->
    <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="bi bi-card-checklist me-2"></i> Archived Tasks</h5>
            <span class="badge bg-light text-primary fs-6">@(ViewBag.ArchivedTasks?.Count ?? 0) tasks</span>
        </div>

        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="tasksTable">
                    <thead class="table-light">
                        <tr>
                            <th><a href="@Url.Action("DocumentArchive", "Task", new { sort = "client", client = ViewBag.ClientFilter, permit = ViewBag.PermitFilter, status = ViewBag.StatusFilter })">Client Name <i class="bi bi-arrow-down-up"></i></a></th>
                            <th><a href="@Url.Action("DocumentArchive", "Task", new { sort = "permit", client = ViewBag.ClientFilter, permit = ViewBag.PermitFilter, status = ViewBag.StatusFilter })">Permit Type <i class="bi bi-arrow-down-up"></i></a></th>
                            <th>Documents</th>
                            <th>Progress</th>
                            <th><a href="@Url.Action("DocumentArchive", "Task", new { sort = "issued", client = ViewBag.ClientFilter, permit = ViewBag.PermitFilter, status = ViewBag.StatusFilter })">Date Issued <i class="bi bi-arrow-down-up"></i></a></th>
                            <th><a href="@Url.Action("DocumentArchive", "Task", new { sort = "priority", client = ViewBag.ClientFilter, permit = ViewBag.PermitFilter, status = ViewBag.StatusFilter })">Priority <i class="bi bi-arrow-down-up"></i></a></th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.ArchivedTasks != null && ViewBag.ArchivedTasks.Count > 0)
                        {
                            @foreach (var task in ViewBag.ArchivedTasks)
                            {
                                <tr id="task-@task.Id" class="@(task.Priority?.ToLower() switch { "urgent" => "table-danger", "slightly important" => "table-warning", "normal" => "table-secondary", _ => "" })">
                                    <td>@task.ClientName</td>
                                    <td>@task.Permit</td>
                                    <td>
                                        @{
                                            var requirementList = task.RequirementList;
                                            var checkedRequirements = task.CheckedRequirements;
                                            var documentedCount = checkedRequirements.Count;
                                            var totalCount = requirementList.Count;
                                        }
                                        <button type="button" class="btn btn-sm btn-outline-info" data-bs-toggle="modal" data-bs-target="#requirementsModal-@task.Id">
                                            <i class="bi bi-file-earmark-text me-1"></i> @documentedCount/@totalCount
                                        </button>
                                    </td>
                                    <td>
                                        @{
                                            var documentationPercentage = totalCount > 0 ? (documentedCount * 100) / totalCount : 0;
                                            var documentStatusClass = documentationPercentage switch
                                            {
                                                100 => "bg-success",
                                                0 => "bg-danger",
                                                _ => "bg-warning"
                                            };
                                            var documentStatusText = documentationPercentage switch
                                            {
                                                100 => "Complete",
                                                0 => "Not Started",
                                                _ => "In Progress"
                                            };
                                        }
                                        <div class="d-flex align-items-center">
                                            <div class="progress flex-grow-1 me-2" style="height: 20px;">
                                                <div class="progress-bar @documentStatusClass" role="progressbar" style="width: @documentationPercentage%;"
                                                     aria-valuenow="@documentationPercentage" aria-valuemin="0" aria-valuemax="100"></div>
                                            </div>
                                            <small>@documentationPercentage%</small>
                                        </div>
                                    </td>
                                    <td>@task.DateIssued.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        <span class="badge rounded-pill @(task.Priority?.ToLower() switch { "urgent" => "bg-danger", "slightly important" => "bg-warning text-dark", "normal" => "bg-secondary", _ => "bg-primary" })">
                                            @(task.Priority ?? "Normal")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a href="@Url.Action("EditDocumentation", "Task", new { id = task.Id })" class="btn btn-outline-primary" title="Edit">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>
                                            <a href="@Url.Action("RestoreTask", "Task", new { id = task.Id })" class="btn btn-outline-warning" title="Reopen"
                                               onclick="return confirm('Are you sure you want to restore this task to active status?');">
                                                <i class="bi bi-arrow-counterclockwise"></i>
                                            </a>
                                            <form class="move-to-history-form d-inline" action="@Url.Action("MoveToHistory", "Task", new { id = task.Id })" method="post" data-task-id="@task.Id">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-outline-success" title="Move to history">
                                                    <i class="bi bi-check-lg"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>

                                <!-- Requirements Modal -->
                                <div class="modal fade" id="requirementsModal-@task.Id" tabindex="-1" aria-labelledby="requirementsModalLabel-@task.Id" aria-hidden="true">
                                    <div class="modal-dialog modal-lg">
                                        <div class="modal-content">
                                            <div class="modal-header bg-primary text-white">
                                                <h5 class="modal-title" id="requirementsModalLabel-@task.Id">
                                                    <i class="bi bi-file-earmark-text me-2"></i>@task.ClientName - Required Documents
                                                </h5>
                                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="list-group">
                                                    @foreach (var req in requirementList)
                                                    {
                                                        var isChecked = checkedRequirements.Contains(req);
                                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                                            <div>
                                                                <i class="bi @(isChecked ? "bi-check-circle-fill text-success" : "bi-x-circle-fill text-danger") me-2"></i>
                                                                @req
                                                            </div>
                                                            <span class="badge @(isChecked ? "bg-success" : "bg-danger")">
                                                                @(isChecked ? "Documented" : "Pending")
                                                            </span>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                                    <i class="bi bi-x-lg me-1"></i> Close
                                                </button>
                                                <a href="@Url.Action("EditDocumentation", "Task", new { id = task.Id })" class="btn btn-primary">
                                                    <i class="bi bi-pencil-square me-1"></i> Update Documents
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center py-5">
                                    <div class="alert alert-info mb-0">
                                        <i class="bi bi-info-circle-fill me-2"></i> No archived tasks found matching your criteria.
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <small class="text-muted">Showing @(ViewBag.ArchivedTasks?.Count ?? 0) archived tasks</small>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation Modal for Moving to History -->
<div class="modal fade" id="confirmMoveModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title"><i class="bi bi-check-circle me-2"></i>Confirm Completion</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to mark this task as completed and move it to history?</p>
                <div class="alert alert-info mt-3">
                    <i class="bi bi-info-circle me-2"></i> This will remove the task from the archive list. You can still find it in the History section.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg me-1"></i> Cancel
                </button>
                <button type="button" class="btn btn-success" id="confirmMoveButton">
                    <i class="bi bi-check-lg me-1"></i> Confirm
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Confirm before moving to history
            $('.move-to-history-form').on('submit', function(e) {
                e.preventDefault();
                var form = $(this);
                var taskId = form.data('task-id');

                $('#confirmMoveModal').modal('show');

                $('#confirmMoveButton').off('click').on('click', function() {
                    $.ajax({
                        url: form.attr('action'),
                        type: 'POST',
                        data: form.serialize(),
                        success: function(response) {
                            $('#confirmMoveModal').modal('hide');
                            $('#task-' + taskId).fadeOut(300, function() {
                                $(this).remove();
                                // Show success message
                                showAlert('Task successfully moved to history!', 'success');
                                // Update task count
                                updateTaskCount();
                            });
                        },
                        error: function() {
                            $('#confirmMoveModal').modal('hide');
                            showAlert('Error moving task to history. Please try again.', 'danger');
                        }
                    });
                });
            });

            function showAlert(message, type) {
                var alertHtml = `
                    <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                        <i class="bi ${type === 'success' ? 'bi-check-circle-fill' : 'bi-exclamation-triangle-fill'} me-2"></i>
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                `;
                $('.container').prepend(alertHtml);
            }

            function updateTaskCount() {
                var remainingTasks = $('#tasksTable tbody tr').not('[style*="display: none"]').length;
                $('.card-header .badge').text(remainingTasks + ' tasks');
                $('.card-footer small').text('Showing ' + remainingTasks + ' archived tasks');

                if (remainingTasks === 0) {
                    $('#tasksTable tbody').html(`
                        <tr>
                            <td colspan="7" class="text-center py-5">
                                <div class="alert alert-info mb-0">
                                    <i class="bi bi-info-circle-fill me-2"></i> No archived tasks remaining.
                                </div>
                            </td>
                        </tr>
                    `);
                }
            }
        });
    </script>
}