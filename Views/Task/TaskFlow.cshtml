@{
    ViewData["Title"] = "Task Flow Management";
}

<div class="container my-5">
    <h2 class="text-center mb-4">Task Flow Management</h2>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <a href="@Url.Action("Archive", "Task")" class="btn btn-outline-secondary">
            <i class="bi bi-archive-fill"></i> View Archive
        </a>
        <a href="@Url.Action("AddTask", "Task")" class="btn btn-success">
            <i class="bi bi-plus-circle-fill"></i> Add New Task
        </a>
    </div>

    <div class="row">
        <div class="col-12 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Current Task List</h5>
                </div>
                <div class="card-body p-0">
                    <table class="table table-hover mb-0 align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Client</th>
                                <th>Permit</th>
                                <th>Requirements</th>
                                <th>Progress</th>
                                <th>Priority</th>
                                <th>Issued</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.Tasks != null && ViewBag.Tasks.Count > 0)
                            {
                                foreach (var task in ViewBag.Tasks)
                                {
                                    string badgeClass = task.Priority switch
                                    {
                                        "Urgent" => "bg-danger",
                                        "Slightly Important" => "bg-warning text-dark",
                                        "Normal" => "bg-secondary",
                                        _ => "bg-light text-dark"
                                    };

                                    <tr>
                                        <td>@task.ClientName</td>
                                        <td>@task.Permit</td>

                                        <td>
                                            @if (!string.IsNullOrEmpty(task.Requirements))
                                            {
                                                var reqs = task.Requirements.Split(',', StringSplitOptions.RemoveEmptyEntries);
                                                <ul class="mb-0 ps-3">
                                                    @foreach (var r in reqs)
                                                    {
                                                        <li>@r.Trim()</li>
                                                    }
                                                </ul>
                                            }
                                            else
                                            {
                                                <span class="text-muted">None</span>
                                            }
                                        </td>

                                        <td style="width: 180px;">
                                            @if (task.Progress == 0)
                                            {
                                                <div class="progress">
                                                    <div class="progress-bar bg-light text-dark progress-bar-striped" role="progressbar"
                                                         style="width: 100%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                                        No progress yet
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="progress">
                                                    <div class="progress-bar
                                                        @(task.Progress < 40 ? "bg-danger" : task.Progress < 80 ? "bg-warning" : "bg-success")"
                                                         role="progressbar"
                                                         style="width: @task.Progress%"
                                                         aria-valuenow="@task.Progress"
                                                         aria-valuemin="0"
                                                         aria-valuemax="100">
                                                        @task.Progress%
                                                    </div>
                                                </div>
                                            }

                                        </td>

                                        <td>
                                            <span class="badge @badgeClass px-3 py-2 rounded-pill">@task.Priority</span>
                                        </td>

                                        <td>@task.DateIssued.ToString("MMM dd, yyyy h:mm tt")</td>

                                        <td class="text-center">
                                            <a href="@Url.Action("EditTask", "Task", new { id = task.Id })" class="btn btn-sm btn-warning me-1" title="Edit">
                                                <i class="bi bi-pencil-fill"></i>
                                            </a>
                                            <a href="@Url.Action("DeleteTask", "Task", new { id = task.Id })"
                                               class="btn btn-sm btn-danger me-1" title="Delete"
                                               onclick="return confirm('Are you sure you want to delete this task?')">
                                                <i class="bi bi-trash-fill"></i>
                                            </a>
                                            <a href="@Url.Action("MarkAsDone", "Task", new { id = task.Id })"
                                               class="btn btn-sm btn-success" title="Mark as Done">
                                                <i class="bi bi-check-circle-fill"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center text-muted py-4">No tasks available.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
    