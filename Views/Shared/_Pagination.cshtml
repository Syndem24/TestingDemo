@model ViewDataDictionary
@{
    var pageModel = Model["pageModel"] as TestingDemo.Models.PaginatedList<TestingDemo.Models.ClientModel>;
    var pageAction = Model["pageAction"].ToString();
    // Determine which page number belongs to this pagination instance
    var isPendingPaginator = Model["pageNumberParam"].ToString() == "pendingPageNumber";
    
    // Get both page numbers from the main view's model
    var pendingPage = isPendingPaginator ? pageModel.PageIndex : (int)Model["otherPageNumber"];
    var clearancePage = !isPendingPaginator ? pageModel.PageIndex : (int)Model["otherPageNumber"];

    var sortOrder = Model["CurrentSort"] as string;
    var searchString = Model["CurrentFilter"] as string;
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center mb-0">
        <!-- Previous Button -->
        <li class="page-item @(pageModel.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-action="@pageAction"
               asp-route-sortOrder="@sortOrder"
               asp-route-searchString="@searchString"
               asp-route-pendingPageNumber="@(isPendingPaginator ? pageModel.PageIndex - 1 : pendingPage)"
               asp-route-clearancePageNumber="@(!isPendingPaginator ? pageModel.PageIndex - 1 : clearancePage)">&laquo;</a>
        </li>

        <!-- Page Number Links -->
        @for (int i = 1; i <= pageModel.TotalPages; i++)
        {
            <li class="page-item @(i == pageModel.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="@pageAction"
                   asp-route-sortOrder="@sortOrder"
                   asp-route-searchString="@searchString"
                   asp-route-pendingPageNumber="@(isPendingPaginator ? i : pendingPage)"
                   asp-route-clearancePageNumber="@(!isPendingPaginator ? i : clearancePage)">@i</a>
            </li>
        }

        <!-- Next Button -->
        <li class="page-item @(pageModel.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-action="@pageAction"
               asp-route-sortOrder="@sortOrder"
               asp-route-searchString="@searchString"
               asp-route-pendingPageNumber="@(isPendingPaginator ? pageModel.PageIndex + 1 : pendingPage)"
               asp-route-clearancePageNumber="@(!isPendingPaginator ? pageModel.PageIndex + 1 : clearancePage)">&raquo;</a>
        </li>
    </ul>
</nav>